# week 3 assignment 
//Instructions:
	•	In Visual Studio Code, write the code that accomplishes the objectives listed below and ensures that the code compiles and runs as directed. 
	•	Create a new repository on GitHub for this week’s assignments and push this document, with your project code, to the repository.
	•	Include the URLs for this week’s repository and video where instructed.
	•	Submit this document as a .PDF file in the LMS. 
Coding Steps:
All questions must be printed to your Browser’s console:
	•	Create an array called ages that contains the following values: 3, 9, 23, 64, 2, 8, 28, 93.


```javascript=
const array_age = [3, 9, 23, 64, 2, 8, 28, 93];
```
	•	Pogrammatically subtract the value of the first element in the array from the value in the last element of the array  
```javascript=
function main(){
	const array_age = [3, 9, 23, 64, 2, 8, 28, 93];
	console.log(subtractFirstFromLast(array_age));
}

function subtractFirstFromLast(arrayAge) {
  let result = arrayAge[arrayAge.length-1] - arrayAge[0];
  return result;
}
main();
```

	•	Do not use numbers to reference the last element, find it programmatically, 
	•	ages[7] – ages[0] is not allowed! 
	•	Add a new age to your array and repeat the step above to ensure it is dynamic. (works for arrays of different lengths).

```javascript=
function main(){
	const array_age = [3, 9, 23, 64, 2, 8, 28, 93];
    array_age.push (35);
	console.log(subtractFirstFromLast(array_age));
}

function subtractFirstFromLast(arrayAge) {
  let result = arrayAge[arrayAge.length-1] - arrayAge[0];
  return result;
}
```

//splice
	•	Use a loop to iterate through the array and calculate the average age.  
```javascript=
function getAverage(nums) {
  let avg = 0; // sets var to 0
  //finds total
  for (let i = 0; i < nums.length; i++) {
     avg = avg + nums[i];
  avg = avg / nums.length;
  return avg;
}

const averageAge = arr <= {
//sum value of array

const sum = arr.reduce ((totalAge, Value) => totalAge + Value);
return sum;
    
//get length of array
return sum / arr.length;
//divide array sum by the length
}
getAverage ([12, 6, 16, 45, 29, 77])
```
	•	Create an array called names that contains the following values: ‘Sam’, ‘Tommy’, ‘Tim’, ‘Sally’, ‘Buck’, ‘Bob’.
 
```javascript=
const arr = ["Sam", "Tommy", "Tim", "Sally", "Buck", "Bob"];
console.log(arr); // ["Sam", "Tommy", "Tim", "Sally", "Buck", "Bob"]


// each of the elements of the array.
console.log(arr[0]); // "Sam"
console.log(arr[1]); // "Tom"
console.log(arr[2]); // "Tim"
console.log(arr[3]); // "Sally"
console.log(arr[4]); // "Buck",
console.log(arr[5]); // "Bob"
```
	•	Use a loop to iterate through the array and calculate the average number of letters per name.  

 
```javascript=
let names = ['Sam', 'Tom', 'Tim', 'Sally', 'Buck', 'Bob'];
let lengths = getAverageNameLength(names);
 
console.log(lengths)

let sum = lengths.reduce

//gets average number given in array
function getAverageNameLength(names) {
  let avg = 0; // sets var to 0
  //finds total
  for (let i = 0; i < names.length; i++) {
     avg = avg + names[i].length;
  }
  //finds average
  avg = avg / names.length;
  return avg;
}
```
•	Use a loop to iterate through the array again and concatenate all the names together, separated by spaces.
```javascript=
let names = ['Sam', 'Tom', 'Tim', 'Sally', 'Buck', 'Bob'];
let lengths = concatNames(names);
 
console.log(lengths)

let sum = lengths.reduce

//gets average number given in array
function concatNames(names) {
  let catStr = ""; // sets empty string
  //finds total
  for (let i = 0; i < names.length; i++) {
     catStr = catStr + names[i];
  }
 
  return catStr;
}

```
	•	How do you access the last element of any array? 
```javascript=
arrayName[array.length-1];
```

	•	How do you access the first element of any array? 
The first and last elements are accessed using an index the first value is accessed using index 0


	•	Create a new array called nameLengths. Write a loop to iterate over the previously created names array and add the length of each name to the nameLengths array. For example: 
namesArray = ["Kelly", "Sam", "Kate"] //given this array
nameLengths = [5, 3, 4] //create this new array  
	•	Write a loop to iterate over the nameLengths array and calculate the sum of all the elements in the array.  
```javascript=
//set array
 var namesArray = [];
namesArray[0] = 'Sam';
namesArray[1] = 'Tom';
namesArray[2] = 'Tim';
namesArray[3] = 'Sally';
namesArray[4] = 'Buck';
let sum=sumAllElements(namesArray);
console.log(sum);

function sumAllElements(namesArray) {
  let sum = 0; // sets var to 0
  //finds total
  for (let i = 0; i < namesArray.length; i++) {
     sum = sum + namesArray[i].length;
  }
  //console.log(namesArray);
  return sum;
}
```
	•	Write a function that takes two parameters, word and n, as arguments and returns the word concatenated to itself n number of times. (i.e. if I pass in ‘Hello’ and 3, I would expect the function to return ‘HelloHelloHello’). 

```javascript=
function pere(word, n){
  let sum = "";
  for (let i = 0; i < n; i++) {
     sum = sum + word;
  }
  console.log(sum);
}
pere("hello",3);
```
	•	Write a function that takes two parameters, firstName and lastName, and returns a full name.
    •	The full name should be the first and the last name separated by a space. 
```javascript=
function createFullName(firstName, lastName){
    console.log(firstName+" "+ lastName);
}

createFullName("Heather", "Haymond");
```

	•	Write a function that takes an array of numbers and returns true if the sum of all the numbers in the array is greater than 100. 
//filter
	•	Write a function that takes an array of numbers and returns the average of all the elements in the array. 
```javascript=
const average = array => array.reduce((a, b) => a + b) / array.length;
console.log(average([1,3,5,4,8]));
```
	•	Write a function that takes two arrays of numbers and returns true if the average of the elements in the first array is greater than the average of the elements in the second array. 
```javascript=
function main() { //this is the main function call
    const nums1 = [1,3,5,4,8]; //first array
    const nums2 = [1,3,12,4,4]; //second array
    //call function that determines greater average
    let result = whichAverageIsGreater(nums1, nums2);
    console.log (result);
}
//gets average number given in array
function getAverage(nums) {
  let avg = 0; // sets var to 0
  //finds total  
  for (let i = 0; i < nums.length; i++) { 
     avg = avg + nums[i];
  }
  //finds average
  avg = avg / nums.length;
  return avg;
}
///comparing averages
function whichAverageIsGreater(nums1, nums2) {
    ///initalize all the var
    let avg1 = 0;
    let result = true;
    let avg2 = 0;
    ///call getAverage twice 
    avg1 = getAverage (nums1);
    avg2 = getAverage (nums2);
    console.log (avg1);
    console.log (avg2);
    if (avg1 > avg2) { 
     result = true;
    }
    else {
     result = false;
    }
    return result;
}
main();
```
	•	Write a function called willBuyDrink that takes a boolean isHotOutside, and a number moneyInPocket, and returns true if it is hot outside and if moneyInPocket is greater than 10.50. 
```javascript= 
function main(){
	console.log(willBuyDrink(true, 11));
}

function willBuyDrink(isHotOutside, moneyInPocket) {
  let result = false;
  if (isHotOutside && moneyInPocket > 10.50) {
    result = true;
  }
  return result;
}
main();
```
	•	Create a function of your own that solves a problem. 
```javascript= 
//this is the main function
function main(){
    //Initalize Values
    let fineDining = true;
    let howMuchMoneyYouHave = 50.00;
    let fastFood = false;
    //call function with default values
	console.log(willYouBuyDinner(fineDining, fastFood, howMuchMoneyYouHave));
}
//determines your dining opetions depending on the amout of moneyInPocket
function willYouBuyDinner(fineDining, fastFood, moneyInPocket) {
  let result = false;
  //if both the desire to eat fine dining and you have enough money is true, then you can eat fine dining 
  if (fineDining && moneyInPocket > 60.00) {
    result = true;
  }
  //if both the desire to eat fast food and you have enough money is true, then you can eat fast food
  if (fastFood && moneyInPocket > 10.00) {
    result = true;
  }
  return result;
}
main(); 

```
	•	In comments, write what the function does and why you created it. 
 Video Steps:
	•	Create a video, up to five minutes max, showing and explaining how your project works with an emphasis on the portions you contributed. 
	•	This video should be done using screen share and voice over. 
	•	This can easily be done using Zoom, although you don't have to use Zoom, it's just what we recommend. 
	•	You can create a new meeting, start screen sharing, and start recording. 
	•	This will create a video recording on your computer. 
	•	This should then be uploaded to a publicly accessible site, such as YouTube. 
	•	Ensure the link you share is PUBLIC or UNLISTED!
	•	If it is not accessible by your grader, your project will be graded based on what they can access.


Instructions: One of the most asked questions and many times the way an interview with an employer will start is for the employer to ask, “Tell me about yourself”. This could be a preliminary phone screen, video or in-person interview, or maybe sitting down with the CEO or high-level executive during the final round. 
Even though this is one of the most common interview questions it can stump you so it is important to be prepared so you can set the tone for the interview and set yourself up for success. It’s a great starting point that can help you inform the direction of the conversation, depending on what you say it’s going to help the interviewer form their next question, which can then form a chain effect of follow-up questions and create a steady flow to the conversation. At the end of the day, the interviewer is just trying to get to know you and to understand why you are a fit for the position as well as the company culture. 
Sometimes this question might be attached with a time limit 2,5,10 minutes. You may hear the same question in the forms of: 
“I have your resume in front of me but tell me more about yourself”
“Tell me a little bit more about your background” 
“Walk me through your resume”
 
For this assignment, please record yourself answering the question “Tell me about yourself in 2 minutes or less”  
Some Tips on what to say in no order. Whatever order you pick, you want to ultimately tie it back into the job and company you are applying for. You want to leave the person interviewing with the impression of “this is why you are sitting here talking to me about this opportunity.” 
	•	Tell a story. You are looking to give a brief overview of who you are and what got you to this interview. 
	•	Talk about the Present (what your current role, what projects you are working on, the scope of it, perhaps a recent accomplishment, what are you currently interested in, what brought you to this interview)
	•	Talk about the Past (where you are from, what got you here, any previous experience that might relate to the job and position you are applying for, education)
	•	Talk about the Future (Segue into what you’re looking to do next and why you’re interested in this role. Why you feel you are a great fit, any long-term goals you have)
	•	Talk about what brought you into this field, why you decided to attend a bootcamp and what you accomplished


A few more Tips:
	•	Keep it positive, Keep it professional 
	•	Be passionate as much as you feel comfortable 
	•	Don’t just recite your resume verbatim 
	•	Practice but don’t memorize 
	•	Know your audience
	•	Remember this is your first impression and it matters  

Practice out loud. Record your pitch and upload it to the internet. You can use whichever tool you’d like to upload (Facebook, YouTube, DropBox, etc.), just make sure you can give someone a link to view the file. Paste the link to your uploaded recording below.

Link to Recorded Elevator Pitch:
